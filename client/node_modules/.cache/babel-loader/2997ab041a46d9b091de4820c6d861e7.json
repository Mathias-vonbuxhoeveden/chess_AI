{"ast":null,"code":"var _jsxFileName = \"/Users/m.von-buxhoeveden/Desktop/chess_ai_blue_print/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlayVsPlay(_ref) {\n  _s();\n\n  let {\n    boardWidth\n  } = _ref;\n  const chessboardRef = useRef();\n  const [game, setGame] = useState(new Chess());\n\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = { ...g\n      };\n      modify(update);\n      return update;\n    });\n  }\n\n  function onDrop(sourceSquare, targetSquare) {\n    const gameCopy = { ...game\n    };\n    const move = gameCopy.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q' // always promote to a queen for example simplicity\n\n    });\n    setGame(gameCopy);\n    return move;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      id: \"PlayVsPlay\",\n      animationDuration: 200,\n      boardWidth: boardWidth,\n      position: game.fen(),\n      onPieceDrop: onDrop,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n      },\n      ref: chessboardRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rc-button\",\n      onClick: () => {\n        safeGameMutate(game => {\n          game.reset();\n        });\n        chessboardRef.current.clearPremoves();\n      },\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rc-button\",\n      onClick: () => {\n        safeGameMutate(game => {\n          game.undo();\n        });\n        chessboardRef.current.clearPremoves();\n      },\n      children: \"undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayVsPlay, \"E7lRZif6HQcZ/VEfWjszhKsYYAI=\");\n\n_c = PlayVsPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayVsPlay\");","map":{"version":3,"sources":["/Users/m.von-buxhoeveden/Desktop/chess_ai_blue_print/client/src/App.js"],"names":["useRef","useState","Chess","Chessboard","PlayVsPlay","boardWidth","chessboardRef","game","setGame","safeGameMutate","modify","g","update","onDrop","sourceSquare","targetSquare","gameCopy","move","from","to","promotion","fen","borderRadius","boxShadow","reset","current","clearPremoves","undo"],"mappings":";;;AAEA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAAQC,KAAR,QAAoB,UAApB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,UAAT,OAAoC;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACjD,QAAMC,aAAa,GAAGN,MAAM,EAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAIC,KAAJ,EAAD,CAAhC;;AAEA,WAASO,cAAT,CAAwBC,MAAxB,EAAgC;AAC9BF,IAAAA,OAAO,CAAEG,CAAD,IAAO;AACb,YAAMC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAf;AACAD,MAAAA,MAAM,CAACE,MAAD,CAAN;AACA,aAAOA,MAAP;AACD,KAJM,CAAP;AAKD;;AAED,WAASC,MAAT,CAAgBC,YAAhB,EAA8BC,YAA9B,EAA4C;AAC1C,UAAMC,QAAQ,GAAG,EAAE,GAAGT;AAAL,KAAjB;AACA,UAAMU,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAc;AACzBC,MAAAA,IAAI,EAAEJ,YADmB;AAEzBK,MAAAA,EAAE,EAAEJ,YAFqB;AAGzBK,MAAAA,SAAS,EAAE,GAHc,CAGV;;AAHU,KAAd,CAAb;AAKAZ,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACA,WAAOC,IAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,iBAAiB,EAAE,GAFrB;AAGE,MAAA,UAAU,EAAEZ,UAHd;AAIE,MAAA,QAAQ,EAAEE,IAAI,CAACc,GAAL,EAJZ;AAKE,MAAA,WAAW,EAAER,MALf;AAME,MAAA,gBAAgB,EAAE;AAChBS,QAAAA,YAAY,EAAE,KADE;AAEhBC,QAAAA,SAAS,EAAE;AAFK,OANpB;AAUE,MAAA,GAAG,EAAEjB;AAVP;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,cAAc,CAAEF,IAAD,IAAU;AACvBA,UAAAA,IAAI,CAACiB,KAAL;AACD,SAFa,CAAd;AAGAlB,QAAAA,aAAa,CAACmB,OAAd,CAAsBC,aAAtB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbjB,QAAAA,cAAc,CAAEF,IAAD,IAAU;AACvBA,UAAAA,IAAI,CAACoB,IAAL;AACD,SAFa,CAAd;AAGArB,QAAAA,aAAa,CAACmB,OAAd,CAAsBC,aAAtB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GA7DuBtB,U;;KAAAA,U","sourcesContent":["\n\nimport { useRef, useState } from 'react';\nimport {Chess} from 'chess.js';\n\nimport { Chessboard } from 'react-chessboard';\n\nexport default function PlayVsPlay({ boardWidth }) {\n  const chessboardRef = useRef();\n  const [game, setGame] = useState(new Chess());\n\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n  }\n\n  function onDrop(sourceSquare, targetSquare) {\n    const gameCopy = { ...game };\n    const move = gameCopy.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q' // always promote to a queen for example simplicity\n    });\n    setGame(gameCopy);\n    return move;\n  }\n\n  return (\n    <div>\n      <Chessboard\n        id=\"PlayVsPlay\"\n        animationDuration={200}\n        boardWidth={boardWidth}\n        position={game.fen()}\n        onPieceDrop={onDrop}\n        customBoardStyle={{\n          borderRadius: '4px',\n          boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n        }}\n        ref={chessboardRef}\n      />\n      <button\n        className=\"rc-button\"\n        onClick={() => {\n          safeGameMutate((game) => {\n            game.reset();\n          });\n          chessboardRef.current.clearPremoves();\n        }}\n      >\n        reset\n      </button>\n      <button\n        className=\"rc-button\"\n        onClick={() => {\n          safeGameMutate((game) => {\n            game.undo();\n          });\n          chessboardRef.current.clearPremoves();\n        }}\n      >\n        undo\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}