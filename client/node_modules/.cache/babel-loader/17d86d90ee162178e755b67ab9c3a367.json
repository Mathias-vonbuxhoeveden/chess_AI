{"ast":null,"code":"var _jsxFileName = \"/Users/m.von-buxhoeveden/Desktop/chess_ai_blue_print/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [game, setGame] = useState(new Chess()); // perform modify function on game state\n\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = { ...g\n      };\n      modify(update);\n      return update;\n    });\n  }\n\n  function makeRandomMove() {\n    fetch('/members', {\n      method: 'POST',\n      // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(game.fen())\n    }).then(response => response.json()).then(actualData => {\n      safeGameMutate(game => {\n        game.move(actualData);\n      });\n    });\n  } // perform action when piece dropped by user\n\n\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate(game => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    }); // illegal move made\n\n    if (move === null) return false; // valid move made, make computer move\n\n    setTimeout(makeRandomMove, 200);\n    return true;\n    console.log(game);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chessboard, {\n    position: game.fen(),\n    onPieceDrop: onDrop\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"PR4LgXfU0ine+RDS7OWnXVoOg2E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/m.von-buxhoeveden/Desktop/chess_ai_blue_print/client/src/App.js"],"names":["useState","useEffect","Chessboard","Chess","App","game","setGame","safeGameMutate","modify","g","update","makeRandomMove","fetch","method","headers","body","JSON","stringify","fen","then","response","json","actualData","move","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","console","log"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAIG,KAAJ,EAAD,CAAhC,CADa,CAIf;;AACE,WAASI,cAAT,CAAwBC,MAAxB,EAAgC;AAC9BF,IAAAA,OAAO,CAAEG,CAAD,IAAO;AACb,YAAMC,MAAM,GAAG,EAAE,GAAGD;AAAL,OAAf;AACAD,MAAAA,MAAM,CAACE,MAAD,CAAN;AACA,aAAOA,MAAP;AACD,KAJM,CAAP;AAKD;;AAGH,WAASC,cAAT,GAA0B;AAEvBC,IAAAA,KAAK,CAAC,UAAD,EAAc;AAChBC,MAAAA,MAAM,EAAE,MADQ;AACA;AAChBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAKhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAI,CAACa,GAAL,EAAf;AALU,KAAd,CAAL,CAOAC,IAPA,CAOMC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPnB,EAQAF,IARA,CAQMG,UAAD,IAAgB;AACpBf,MAAAA,cAAc,CAAEF,IAAD,IAAU;AACpBA,QAAAA,IAAI,CAACkB,IAAL,CAAUD,UAAV;AACD,OAFU,CAAd;AAKD,KAdA;AAiBD,GAjCa,CAmCf;;;AACE,WAASE,MAAT,CAAgBC,YAAhB,EAA8BC,YAA9B,EAA4C;AAC1C;AACA,QAAIH,IAAI,GAAG,IAAX;AACAhB,IAAAA,cAAc,CAAEF,IAAD,IAAU;AACvBkB,MAAAA,IAAI,GAAGlB,IAAI,CAACkB,IAAL,CAAU;AACfI,QAAAA,IAAI,EAAEF,YADS;AAEfG,QAAAA,EAAE,EAAEF,YAFW;AAGfG,QAAAA,SAAS,EAAE;AAHI,OAAV,CAAP;AAKD,KANa,CAAd,CAH0C,CAW1C;;AACA,QAAIN,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP,CAZuB,CAa1C;;AACAO,IAAAA,UAAU,CAACnB,cAAD,EAAiB,GAAjB,CAAV;AACA,WAAO,IAAP;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AACD;;AACD,sBAAO,QAAC,UAAD;AAAY,IAAA,QAAQ,EAAEA,IAAI,CAACa,GAAL,EAAtB;AAAkC,IAAA,WAAW,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAvDQpB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n\n\n// perform modify function on game state\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n  }\n\n\nfunction makeRandomMove() {\n\n   fetch('/members',  {\n      method: 'POST', // or 'PUT'\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(game.fen()),\n    })\n  .then((response) => response.json())\n  .then((actualData) => {\n    safeGameMutate((game) => {\n         game.move(actualData);\n       });\n\n\n  })\n\n\n }\n\n// perform action when piece dropped by user\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate((game) => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    });\n\n    // illegal move made\n    if (move === null) return false;\n    // valid move made, make computer move\n    setTimeout(makeRandomMove, 200);\n    return true;\n    console.log(game)\n  }\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop}                                                                                    />;\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}